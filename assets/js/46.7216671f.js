(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{372:function(t,a,s){"use strict";s.r(a);var r=s(15),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"수와-집합"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#수와-집합"}},[t._v("#")]),t._v(" 수와 집합")]),t._v(" "),a("ul",[a("li",[t._v("집합(set) : 서로 구분되는 원소(Element)로 구성된 묶음을 의미한다.")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("분류")]),t._v(" "),a("th",[t._v("정의")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("자연수")]),t._v(" "),a("td",[t._v("물건을 세거나 순서를 지정하기 위해 사용하는 수의 집합")])]),t._v(" "),a("tr",[a("td",[t._v("정수")]),t._v(" "),a("td",[t._v("자연수와 자연수의 음수 0을 포함하는 수의 집합")])]),t._v(" "),a("tr",[a("td",[t._v("유리수")]),t._v(" "),a("td",[t._v("분모가 0이 아닌 두 정수의 비율 혹은 분수로 나타낼 수 있는 수의 집합")])]),t._v(" "),a("tr",[a("td",[t._v("무리수")]),t._v(" "),a("td",[t._v("두 정수 비 혹은 분수로 나타낼 수 없는 수의 집합")])]),t._v(" "),a("tr",[a("td",[t._v("실수")]),t._v(" "),a("td",[t._v("유리수와 무리수를 포함하는 수의 집합")])]),t._v(" "),a("tr",[a("td",[t._v("복소수")]),t._v(" "),a("td",[t._v("실수와 제곱하면 -1이 되는 허수 단위 i를 조합해 a + bi(a, b는 실수) 형태로 표현하는 수의 집합")])]),t._v(" "),a("tr",[a("td",[t._v("서원수")]),t._v(" "),a("td",[t._v("실수와 제곱하면 -1이 되는 세 허수 단위 i, j, k 를 조합해 a + bi + cj + dk(a, b, c, d는 실수) 형태로 표현하는 수의 집합")])])])]),t._v(" "),a("h3",{attrs:{id:"연산과-수의-구조"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#연산과-수의-구조"}},[t._v("#")]),t._v(" 연산과 수의 구조")]),t._v(" "),a("p",[t._v("수집합은 원소를 이용해 연산을 하고 대표적인 연산은 덧셈, 뺄셈, 곱셉, 나눗셈의 사칙연산이 있으며, 이러한 연산은 두 개의 원소를 사용해 새로운 원소를 만들어내기 때문에 이항연산(Binary operation)이라고도 한다.\n같은 집합에 속한 두 수를 투입한 이항연산의 결과가 항상 투입한 집합에 속한다면, 그 이항연산은 해당 집합에 대해 닫혀 있다(Closure)고 한다. 그리고 이항연산은 대표적으로 3가지 성질을 지닌다. (교환법칙, 결합법칙, 분배법칙)")]),t._v(" "),a("ul",[a("li",[t._v("교환 법칙 : 임의의 두 수 a와 b를 연산할 때 순서에 관계없이 항상 동일한 결과가 나오는 성질")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a\na"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a\n")])])]),a("ul",[a("li",[t._v("결합 법칙 : 연산이 두 번 이상 연속될 때, 앞의 연산을 먼저 계산한 결과와 뒤의 연산을 계산한 결과가 같은 성질을 의미한다.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("분배법칙 : 서로 다른 2가지 연산에 대해 다음의 규칙이 성립되는 것이다.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("좌분배법칙"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("우분배법칙"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("추가적으로 이항연산이 가지는 특징은 항등원(Identity)와 역원(Inverser)이다.")]),t._v(" "),a("ul",[a("li",[t._v("항등원 : 임의의 수와의 연산 결과를 항상 동일한 수로 만들어주는 수")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0: 덧셈의 항등원")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1: 곱셈의 항등원")]),t._v("\n")])])]),a("ul",[a("li",[t._v("역원 : 임의의 수와의 연산 결과를 항상 항등원으로 만들어주는 수")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-a: a의 덧셈 역원 (반대수, Opposite number)")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1/a: a의 곱셈 역원 (역수, Reciprocal)")]),t._v("\n")])])]),a("br"),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("이득우의 게임 수학")])]),t._v(" "),a("Comment")],1)}),[],!1,null,null,null);a.default=e.exports}}]);